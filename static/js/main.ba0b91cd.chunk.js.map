{"version":3,"sources":["components/BillToPay.jsx","components/BillTipPercent.jsx","components/BillSelectTip.jsx","components/BillNumberOfPersons.jsx","components/BillTotal.jsx","components/BillContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["BillToPay","props","className","onChange","e","onBillAmount","target","value","type","min","billAmount","BillTipPercent","useState","isSelected","setIsSelected","onClick","onSelectTip","tipValue","tipClassName","BillSelectTip","map","tip","tipAmount","BillNumberOfPersons","onSelectNumOfPeople","numberOfPeople","BillTotal","billTotalRunnig","onReset","BillContainer","setBillTotalRunning","billAmout","setBillAmout","setNumberOfPeople","setTipAmount","selectTipHandler","getTip","calTip","getAmount","numOfPeople","toFixed","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba0b91cd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./BillToPay.css\";\r\n\r\nexport default function BillToPay(props) {\r\n  return (\r\n    <div>\r\n      <h3 className=\"label\">Bill</h3>\r\n      <div className=\"bill-input-container\">\r\n        <input\r\n          onChange={(e) => {\r\n            props.onBillAmount(e.target.value);\r\n          }}\r\n          className=\"bill-input\"\r\n          type=\"number\"\r\n          min=\"0\"\r\n          value={props.billAmount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function BillTipPercent(props) {\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  return (\r\n    <div\r\n      onClick={(e) => {\r\n        props.onSelectTip(props.tipValue);\r\n        setIsSelected(isSelected ? false : true);\r\n      }}\r\n      className={`${props.tipClassName} ${!isSelected ? \"\" : \"selected\"}`}\r\n    >\r\n      {props.tipValue + \"%\"}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./BillSelectTip.css\";\r\nimport BillTipPercent from \"./BillTipPercent\";\r\n\r\nexport default function BillSelectTip(props) {\r\n  const tipValues = [\r\n    {\r\n      className: \"tip-percent-container__box\",\r\n\r\n      value: 5,\r\n    },\r\n    {\r\n      className: \"tip-percent-container__box\",\r\n\r\n      value: 10,\r\n    },\r\n    {\r\n      className: \"tip-percent-container__box\",\r\n\r\n      value: 15,\r\n    },\r\n    {\r\n      className: \"tip-percent-container__box\",\r\n\r\n      value: 25,\r\n    },\r\n    {\r\n      className: \"tip-percent-container__box\",\r\n\r\n      value: 50,\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <h3 className=\"label\">Select Tip %</h3>\r\n      <div className=\"tip-percent-container\">\r\n        {tipValues.map((tip) => (\r\n          <BillTipPercent\r\n            key={tip.value}\r\n            onSelectTip={props.onSelectTip}\r\n            tipClassName={tip.className}\r\n            tipValue={tip.value}\r\n          />\r\n        ))}\r\n        <div className=\"custom\">\r\n          <input\r\n            onChange={(e) => props.onSelectTip(e.target.value)}\r\n            className=\"tip-percent-container__box\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            value={props.tipAmount}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function BillNumberOfPersons(props) {\r\n  return (\r\n    <div>\r\n      <h3 className=\"label\">Number of People</h3>\r\n      <div className=\"bill-input-container \">\r\n        <input\r\n          onChange={(e) => props.onSelectNumOfPeople(e.target.value)}\r\n          className=\"bill-input\"\r\n          type=\"number\"\r\n          min=\"1\"\r\n          value={props.numberOfPeople}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./BillTotal.css\";\r\n\r\nexport default function BillTotal(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"total-container\">\r\n        <div className=\"total\">\r\n          <div className=\"total-title\">\r\n            <h3>Tip Amount</h3>\r\n            <h4>/ person</h4>\r\n          </div>\r\n          <div className=\"total-number\">${props.tipAmount}</div>\r\n        </div>\r\n\r\n        <div className=\"total\">\r\n          <div className=\"total-title\">\r\n            <h3>Total</h3>\r\n            <h4>/ person</h4>\r\n          </div>\r\n          <div className=\"total-number\">${props.billTotalRunnig}</div>\r\n        </div>\r\n\r\n        <div className=\"total-reset\">\r\n          <button onClick={props.onReset}>RESET</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport BillToPay from \"./BillToPay\";\r\nimport BillSelectTip from \"./BillSelectTip\";\r\nimport BillNumberOfPersons from \"./BillNumberOfPersons\";\r\nimport BillTotal from \"./BillTotal\";\r\nimport \"./BillContainer.css\";\r\n\r\nexport default function BillContainer() {\r\n  const [billTotalRunnig, setBillTotalRunning] = useState(\"0\");\r\n  const [billAmout, setBillAmout] = useState(0);\r\n  const [numberOfPeople, setNumberOfPeople] = useState(1);\r\n  const [tipAmount, setTipAmount] = useState(0);\r\n\r\n  const billAmountHandler = (getAmount) => {\r\n    setBillAmout(getAmount);\r\n    setBillTotalRunning(+getAmount);\r\n  };\r\n\r\n  const selectTipHandler = (getTip) => {\r\n    setTipAmount(getTip);\r\n  };\r\n\r\n  const selectNumOfPeopleHandler = (numOfPeople) => {\r\n    setNumberOfPeople(numOfPeople);\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    setBillTotalRunning(0);\r\n    setBillAmout(0);\r\n    setNumberOfPeople(1);\r\n    setTipAmount(0);\r\n  };\r\n\r\n  const calTip = () => (billTotalRunnig * tipAmount) / 100 / numberOfPeople;\r\n  const calTotal = () => (billTotalRunnig + calTip()) / numberOfPeople;\r\n\r\n  return (\r\n    <div className=\"bill-container\">\r\n      <div className=\"desktop-left\">\r\n        <BillToPay billAmount={billAmout} onBillAmount={billAmountHandler} />\r\n        <BillSelectTip\r\n          onSelectTip={selectTipHandler}\r\n          onChange={selectTipHandler}\r\n          tipAmount={tipAmount}\r\n        />\r\n        <BillNumberOfPersons\r\n          numberOfPeople={numberOfPeople}\r\n          onSelectNumOfPeople={selectNumOfPeopleHandler}\r\n        />\r\n      </div>\r\n      <div className=\"desktop-rigth\">\r\n        <BillTotal\r\n          tipAmount={calTip().toFixed(2)}\r\n          billTotalRunnig={calTotal().toFixed(2)}\r\n          onReset={resetHandler}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport BillContainer from \"./components/BillContainer\";\n\nfunction App() {\n  return (\n    <div>\n      <h1 className=\"header-title\">\n        SPLI\n        <br />\n        TTER\n      </h1>\n      <BillContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}